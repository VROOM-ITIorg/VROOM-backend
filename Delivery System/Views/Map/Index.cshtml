<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Route Explorer</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <!-- Leaflet CSS -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/leaflet.css">
    <!-- Leaflet JS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/leaflet.js"></script>
    <!-- Bootstrap JS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    <!-- Polyline decoding script -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/mapbox-polyline/1.1.1/polyline.min.js"></script>

    <style>
        #map {
            height: 400px;
            width: 100%;
            border-radius: 0.25rem;
        }

        .map-overlay {
            position: absolute;
            bottom: 10px;
            right: 10px;
            background: rgba(255, 255, 255, 0.8);
            padding: 5px 10px;
            border-radius: 4px;
            font-size: 12px;
            z-index: 1000;
        }

        .map-container {
            position: relative;
            margin-top: 20px;
        }
    </style>
</head>
<body class="bg-light">
    <div class="container py-4">
        <header class="pb-3 mb-4 border-bottom">
            <h1 class="display-5 fw-bold text-primary">
                <i class="fas fa-map-marked-alt me-2"></i> Route Explorer
            </h1>
        </header>

        <div class="card shadow-sm mb-4">
            <div class="card-body">
                <div class="search-container">
                    <form asp-action="Route" method="post">
                        <div class="row g-3">
                            <div class="col-md-4">
                                <div class="input-group">
                                    <span class="input-group-text"><i class="fas fa-search"></i></span>
                                    <input type="text" class="form-control" id="origin" name="origin" placeholder="Enter origin...">
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="input-group">
                                    <span class="input-group-text"><i class="fas fa-search"></i></span>
                                    <input type="text" class="form-control" id="destination" name="destination" placeholder="Enter destination...">
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="input-group">
                                    <span class="input-group-text"><i class="fas fa-truck"></i></span>
                                    <input type="number" class="form-control" id="shipmentId" name="shipmentId" placeholder="Shipment ID...">
                                </div>
                            </div>
                            <div class="col-md-2">
                                <button type="submit" class="btn btn-primary w-100">
                                    <i class="fas fa-globe me-2"></i>Find Route
                                </button>
                            </div>
                        </div>

                        @if (!ViewData.ModelState.IsValid)
                        {
                            <div class="alert alert-danger mt-3">
                                @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                                {
                                    <p class="mb-0"><i class="fas fa-exclamation-circle me-2"></i> @error.ErrorMessage</p>
                                }
                            </div>
                        }
                    </form>
                </div>

                @if (Model is VROOM.Models.Route routeModel && routeModel.Id != 0) // Check if a Route is passed
                {
                    <div class="results mt-4">
                        <h2 class="border-bottom pb-2 mb-3">Optimized Route Found</h2>

                        <div class="row row-cols-1 row-cols-md-3 g-4 mb-4">
                            <div class="col">
                                <div class="card h-100 bg-light">
                                    <div class="card-body">
                                        <h5 class="card-title text-primary">Route ID</h5>
                                        <p class="card-text"><i class="fas fa-id-badge me-2"></i> @routeModel.Id</p>
                                    </div>
                                </div>
                            </div>
                            <div class="col">
                                <div class="card h-100 bg-light">
                                    <div class="card-body">
                                        <h5 class="card-title text-primary">Origin</h5>
                                        <p class="card-text"><i class="fas fa-map-pin me-2"></i> @routeModel.OriginArea</p>
                                    </div>
                                </div>
                            </div>
                            <div class="col">
                                <div class="card h-100 bg-light">
                                    <div class="card-body">
                                        <h5 class="card-title text-primary">Destination</h5>
                                        <p class="card-text"><i class="fas fa-map-pin me-2"></i> @routeModel.DestinationArea</p>
                                    </div>
                                </div>
                            </div>
                            <div class="col">
                                <div class="card h-100 bg-light">
                                    <div class="card-body">
                                        <h5 class="card-title text-primary">Start</h5>
                                        <p class="card-text"><i class="fas fa-clock me-2"></i> @routeModel.Start.ToString("g")</p>
                                    </div>
                                </div>
                            </div>
                            <div class="col">
                                <div class="card h-100 bg-light">
                                    <div class="card-body">
                                        <h5 class="card-title text-primary">End</h5>
                                        <p class="card-text"><i class="fas fa-clock me-2"></i> @routeModel.End.ToString("g")</p>
                                    </div>
                                </div>
                            </div>
                            <div class="col">
                                <div class="card h-100 bg-light">
                                    <div class="card-body">
                                        <h5 class="card-title text-primary">Duration</h5>
                                        <p class="card-text"><i class="fas fa-hourglass-half me-2"></i> @(routeModel.End - routeModel.Start).TotalMinutes.ToString("F2") minutes</p>
                                    </div>
                                </div>
                            </div>
                            <div class="col">
                                <div class="card h-100 bg-light">
                                    <div class="card-body">
                                        <h5 class="card-title text-primary">Shipment ID</h5>
                                        <p class="card-text"><i class="fas fa-truck me-2"></i> @routeModel.ShipmentID</p>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="map-container">
                            <div id="map" class="shadow"></div>
                            <div class="map-overlay shadow-sm">
                                <i class="fas fa-info-circle me-1"></i> Drag to move, scroll to zoom
                            </div>
                        </div>
                    </div>

                    <script>
                        document.addEventListener('DOMContentLoaded', function() {
                            // Decode the polyline from Radar API using the global 'polyline' object
                            var encodedPolyline = '@Html.Raw(routeModel.Waypoints)';
                            var coordinates = polyline.decode(encodedPolyline);

                            // Create the map, centered on the first coordinate
                            var map = L.map('map').setView(coordinates[0], 13);

                            // Add OpenStreetMap tile layer
                            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                                attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
                            }).addTo(map);

                            // Add the polyline to the map
                            var polylineLayer = L.polyline(coordinates, { color: '#0d6efd', weight: 5, opacity: 0.7 }).addTo(map);

                            // Add markers for origin and destination
                            var originIcon = L.divIcon({
                                html: '<i class="fas fa-play-circle text-success" style="font-size: 24px;"></i>',
                                className: 'custom-div-icon',
                                iconSize: [30, 30],
                                iconAnchor: [15, 15]
                            });

                            var destIcon = L.divIcon({
                                html: '<i class="fas fa-flag-checkered text-danger" style="font-size: 24px;"></i>',
                                className: 'custom-div-icon',
                                iconSize: [30, 30],
                                iconAnchor: [15, 15]
                            });

                            var originMarker = L.marker(coordinates[0], {icon: originIcon}).addTo(map)
                                .bindPopup('<strong>Origin: @routeModel.OriginArea</strong>');
                            var destMarker = L.marker(coordinates[coordinates.length - 1], {icon: destIcon}).addTo(map)
                                .bindPopup('<strong>Destination: @routeModel.DestinationArea</strong>').openPopup();

                            // Fit the map to the polyline bounds
                            map.fitBounds(polylineLayer.getBounds());

                            // Ensure map renders correctly
                            setTimeout(function() {
                                map.invalidateSize();
                            }, 100);
                        });
                    </script>
                }
            </div>
        </div>

        <footer class="text-center text-muted">
            <p>Maps powered by <a href="https://leafletjs.com/" class="text-decoration-none">Leaflet</a> | © OpenStreetMap contributors</p>
        </footer>
    </div>
</body>
</html>