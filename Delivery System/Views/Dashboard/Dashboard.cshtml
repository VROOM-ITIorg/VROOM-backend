@using ViewModels
@model AdminDashboardViewModel

@{
    ViewData["Title"] = "Admin Dashboard";
}

<!-- Include Font Awesome for Icons -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
<!-- Include Google Fonts -->
<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">

<style>
    body {
        font-family: 'Poppins', sans-serif;
        background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
        min-height: 100vh;
    }

    .dashboard-header {
        padding: 2rem 0;
        background: linear-gradient(135deg, #1e3a8a 0%, #3b82f6 100%);
        color: white;
        border-radius: 0 0 20px 20px;
        box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);
        margin-bottom: 2.5rem;
    }

    .stats-card {
        background: white;
        border-radius: 12px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        padding: 1.5rem;
        transition: all 0.3s ease;
        border-left: 5px solid transparent;
        position: relative;
        overflow: visible; /* Changed to visible to prevent clipping */
    }

        .stats-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
        }

        .stats-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(45deg, rgba(255, 255, 255, 0.1), rgba(255, 255, 255, 0));
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .stats-card:hover::before {
            opacity: 1;
        }

    .card-primary {
        border-left-color: #1e3a8a;
    }

    .card-success {
        border-left-color: #22c55e;
    }

    .card-info {
        border-left-color: #06b6d4;
    }

    .card-warning {
        border-left-color: #f59e0b;
    }

    .card-danger {
        border-left-color: #ef4444;
    }

    .card-secondary {
        border-left-color: #6b7280;
    }

    .card-dark {
        border-left-color: #111827;
    }

    .card-value {
        font-size: 1.8rem;
        font-weight: 600;
        color: #1f2937;
        margin-bottom: 0.25rem;
    }

    .card-title {
        font-size: 0.85rem;
        color: #6b7280;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .card-icon {
        font-size: 2rem;
        opacity: 0.9;
    }

        .card-icon.primary {
            color: #1e3a8a;
        }

        .card-icon.success {
            color: #22c55e;
        }

        .card-icon.info {
            color: #06b6d4;
        }

        .card-icon.warning {
            color: #f59e0b;
        }

        .card-icon.danger {
            color: #ef4444;
        }

        .card-icon.secondary {
            color: #6b7280;
        }

        .card-icon.dark {
            color: #111827;
        }

    .chart-container {
        background: white;
        padding: 2rem; /* Increased padding for more space */
        border-radius: 12px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        margin-bottom: 2rem;
        overflow: visible; /* Ensure no clipping for charts */
        position: relative;
        z-index: 1;
    }

    .chart-wrapper {
        height: 300px;
        width: 100%;
        padding: 1.5rem; /* Added more padding to give charts space */
        position: relative;
        overflow: visible; /* Prevent chart clipping */
        contain: content; /* Restrict chart rendering to its content area */
    }

    .chart-title {
        font-size: 1.4rem; /* Slightly smaller for elegance */
        font-weight: 600;
        color: #1f2937;
        margin: 1rem 0.5rem;
        padding: 0.5rem 1rem;
        background: #f8fafc; /* Light, clean background */
        border-left: 4px solid #1e3a8a; /* Subtle left border */
        border-radius: 6px;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1); /* Soft shadow */
        position: relative;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

        

    .rider-table thead {
        background: linear-gradient(90deg, #1e3a8a, #3b82f6);
        color: white;
    }

    .rider-table th {
        font-weight: 500;
        font-size: 0.85rem;
        padding: 1rem;
    }

    .rider-table td {
        padding: 1rem;
        vertical-align: middle;
    }

    .rider-table tbody tr:hover {
        background-color: #f1f5f9;
        transform: scale(1.005);
    }

    .rating-badge {
        background: #22c55e;
        color: white;
        border-radius: 20px;
        padding: 0.3rem 0.7rem;
        font-size: 0.9rem;
    }

    .filter-form {
        background: white;
        padding: 1rem;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        margin-bottom: 2rem;
    }

    .dashboard-footer {
        margin: 2rem 0;
        font-size: 0.85rem;
        color: #6b7280;
        text-align: center;
    }

    @@media (max-width: 992px) {
        .stats-card

    {
        margin-bottom: 1rem;
    }

    .chart-wrapper {
        height: 250px;
        padding: 1rem; /* Adjusted for smaller screens */
    }

    }

    @@media (max-width: 576px) {
        .card-value

    {
        font-size: 1.5rem;
    }

    .card-icon {
        font-size: 1.5rem;
    }

    .dashboard-header h1 {
        font-size: 1.5rem;
    }

    

    .rider-table th, .rider-table td {
        font-size: 0.8rem;
        padding: 0.75rem;
    }

    .chart-container {
        padding: 1.5rem; /* Adjusted padding for mobile */
    }

    }

    .chart-title {
        font-size: 1.5rem;
        font-weight: 700;
        color: #ffffff;
        background: #1e3a8a;
        padding: 0.75rem 1rem;
        border-radius: 6px;
        display: flex;
        align-items: center;
        margin: 1rem 0;
    }

        .chart-title::before {
            content: '\f080'; /* Font Awesome Chart Icon */
            font-family: 'Font Awesome 6 Free';
            margin-right: 0.5rem;
        }

        .chart-title::after {
            display: none;
        }

    options: {
        animation:{
        duration: 1200, 
        easing: 'easeInOutQuad'
    }

    }
</style>

<!-- Dashboard Header -->
<div class="dashboard-header">
    <div class="container">
        <div class="d-flex justify-content-between align-items-center flex-wrap">
            <h1 class="m-0 fw-bold">Admin Dashboard</h1>
            <div class="text-end">
                <p class="m-0">Welcome, Admin</p>
                <small>Last updated: @DateTime.Now.ToString("dddd, MMMM d, yyyy h:mm tt")</small>
            </div>
        </div>
    </div>
</div>

<div class="container">
    <!-- Filter Form -->
    <div class="filter-form">
        <form asp-action="Dashboard" method="get">
            <div class="row g-3 align-items-end">
                <div class="col-md-3">
                    <label for="days" class="form-label">Date Range</label>
                    <select name="days" class="form-select" onchange="this.form.submit()">
                        <option value="7" selected="@(ViewBag.Days == 7)">Last 7 Days</option>
                        <option value="30" selected="@(ViewBag.Days == 30)">Last 30 Days</option>
                        <option value="90" selected="@(ViewBag.Days == 90)">Last 90 Days</option>
                    </select>
                </div>
            </div>
        </form>
    </div>

    <!-- Stats Cards Section -->
    <h2 class="chart-title mb-4">Key Metrics</h2>
    <div class="row g-2">
        <div class="col-xl-3 col-md-4 col-sm-6">
            <div class="stats-card card-primary">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <div class="card-value">@Model.TotalOrders</div>
                        <div class="card-title">Total Orders</div>
                    </div>
                    <div class="card-icon primary"><i class="fas fa-shopping-cart"></i></div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-4 col-sm-6">
            <div class="stats-card card-success">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <div class="card-value">@Model.TotalRevenue.ToString("C")</div>
                        <div class="card-title">Total Revenue</div>
                    </div>
                    <div class="card-icon success"><i class="fas fa-dollar-sign"></i></div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-4 col-sm-6">
            <div class="stats-card card-info">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <div class="card-value">@Model.ActiveRiders</div>
                        <div class="card-title">Active Riders</div>
                    </div>
                    <div class="card-icon info"><i class="fas fa-motorcycle"></i></div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-4 col-sm-6">
            <div class="stats-card card-warning">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <div class="card-value">@Model.TotalCustomers</div>
                        <div class="card-title">Total Customers</div>
                    </div>
                    <div class="card-icon warning"><i class="fas fa-users"></i></div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-4 col-sm-6">
            <div class="stats-card card-dark">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <div class="card-value">@(Model.AvgDeliveryTimeHours.HasValue ? Model.AvgDeliveryTimeHours.Value.ToString("F2") : "-")</div>
                        <div class="card-title">Avg Delivery Time (hrs)</div>
                    </div>
                    <div class="card-icon dark"><i class="fas fa-clock"></i></div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-4 col-sm-6">
            <div class="stats-card card-secondary">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <div class="card-value">@Model.OnTimeDeliveryRate.ToString("F1")%</div>
                        <div class="card-title">On-Time Delivery</div>
                    </div>
                    <div class="card-icon secondary"><i class="fas fa-check-circle"></i></div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-4 col-sm-6">
            <div class="stats-card card-danger">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <div class="card-value">@Model.TotalIssues</div>
                        <div class="card-title">Issues (Last @ViewBag.Days Days)</div>
                    </div>
                    <div class="card-icon danger"><i class="fas fa-exclamation-triangle"></i></div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-4 col-sm-6">
            <div class="stats-card card-primary">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <div class="card-value">@Model.NewCustomers</div>
                        <div class="card-title">New Customers</div>
                    </div>
                    <div class="card-icon primary"><i class="fas fa-user-plus"></i></div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-4 col-sm-6">
            <div class="stats-card card-warning">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <div class="card-value">@Model.CancellationRate.ToString("F1")%</div>
                        <div class="card-title">Cancellation Rate</div>
                    </div>
                    <div class="card-icon warning"><i class="fas fa-times-circle"></i></div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-4 col-sm-6">
            <div class="stats-card card-info">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <div class="card-value">@(Model.AverageOrderWeight.HasValue ? Model.AverageOrderWeight.Value.ToString("F2") + " kg" : "-")</div>
                        <div class="card-title">Avg Order Weight</div>
                    </div>
                    <div class="card-icon info"><i class="fas fa-weight"></i></div>
                </div>
            </div>
        </div>
    </div>

    <!-- Charts Section -->
    <h2 class="chart-title mb-4">Order Insights</h2>
    <div class="row g-4">
        <div class="col-lg-8">
            <div class="chart-container">
                <h3 class="chart-title">Orders Over Time (Last @ViewBag.Days Days)</h3>
                <div class="chart-wrapper">
                    <canvas id="ordersOverTimeChart"></canvas>
                </div>
            </div>
        </div>
        <div class="col-lg-4">
            <div class="chart-container">
                <h3 class="chart-title">Orders by Status</h3>
                <div class="chart-wrapper">
                    <canvas id="orderStatusChart"></canvas>
                </div>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="chart-container">
                <h3 class="chart-title">Orders by Priority</h3>
                <div class="chart-wrapper">
                    <canvas id="orderPriorityChart"></canvas>
                </div>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="chart-container">
                <h3 class="chart-title">Top Zones by Orders</h3>
                <div class="chart-wrapper">
                    <canvas id="topZonesChart"></canvas>
                </div>
            </div>
        </div>
    </div>

    <!-- Performance Section -->
    <h2 class="chart-title mb-4">Performance Metrics</h2>
    <div class="row g-4">
        <div class="col-lg-6">
            <div class="chart-container">
                <h3 class="chart-title">Top 5 Riders</h3>
                <div class="table-responsive">
                    <table class="table rider-table">
                        <thead>
                            <tr>
                                <th>Rider Name</th>
                                <th>Orders Delivered</th>
                                <th>Rating</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var rider in Model.TopRiders)
                            {
                                <tr>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <div class="me-2 bg-light rounded-circle p-2">
                                                <i class="fas fa-user text-primary"></i>
                                            </div>
                                            <span>@rider.RiderName</span>
                                        </div>
                                    </td>
                                    <td>@rider.OrdersDelivered</td>
                                    <td>
                                        <span class="rating-badge">
                                            @rider.Rating.ToString("F1") <i class="fas fa-star ms-1"></i>
                                        </span>
                                    </td>
                                </tr>
                            }
                            @if (!Model.TopRiders.Any())
                            {
                                <tr>
                                    <td colspan="3" class="text-center">No riders available</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="chart-container">
                <h3 class="chart-title">Top 5 Business Owners</h3>
                <div class="table-responsive">
                    <table class="table rider-table">
                        <thead>
                            <tr>
                                <th>Business Name</th>
                                <th>Total Orders</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var owner in Model.BusinessOwnerPerformances)
                            {
                                <tr>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <div class="me-2 bg-light rounded-circle p-2">
                                                <i class="fas fa-briefcase text-primary"></i>
                                            </div>
                                            <span>@owner.BusinessName</span>
                                        </div>
                                    </td>
                                    <td>@owner.TotalOrders</td>
                                </tr>
                            }
                            @if (!Model.BusinessOwnerPerformances.Any())
                            {
                                <tr>
                                    <td colspan="2" class="text-center">No business owners available</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <!-- Footer -->
    <div class="dashboard-footer">
        <p>© @DateTime.Now.Year - VROOM Delivery System. All rights reserved.</p>
        <p>
            <a href="#" class="text-muted">Support</a> |
            <a href="#" class="text-muted">Reports</a> |
            <a href="#" class="text-muted">Settings</a>
        </p>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            Chart.defaults.font.family = "'Poppins', sans-serif";
            Chart.defaults.color = '#6b7280';
            Chart.defaults.responsive = true;
            Chart.defaults.maintainAspectRatio = false;

            // Order Status Chart (Doughnut)
            const orderStatusData = @Html.Raw(Json.Serialize(Model.OrderStatusCounts.Select(x => x.Count))) || [1];
            const orderStatusLabels = @Html.Raw(Json.Serialize(Model.OrderStatusCounts.Select(x => x.Status.ToString()))) || ['No Data'];
            const orderStatusCtx = document.getElementById('orderStatusChart').getContext('2d');
            new Chart(orderStatusCtx, {
                type: 'doughnut',
                data: {
                    labels: orderStatusLabels,
                    datasets: [{
                        data: orderStatusData,
                        backgroundColor: ['#1e3a8a', '#22c55e', '#06b6d4', '#f59e0b', '#ef4444', '#6b7280'],
                        borderWidth: 1,
                        borderColor: '#ffffff',
                        hoverOffset: 5 // Reduced to minimize clipping
                    }]
                },
                options: {
                    cutout: '65%',
                    plugins: {
                        legend: { position: 'right', labels: { boxWidth: 15, padding: 15 } },
                        tooltip: { backgroundColor: 'rgba(0,0,0,0.8)', padding: 12 }
                    },
                    layout: {
                        padding: 20 // Added padding to chart canvas
                    }
                }
            });

            // Orders Over Time Chart (Line)
            const ordersOverTimeData = @Html.Raw(Json.Serialize(Model.OrdersByDate.Select(x => x.Count))) || [0];
            const ordersOverTimeLabels = @Html.Raw(Json.Serialize(Model.OrdersByDate.Select(x => x.Date.ToString("yyyy-MM-dd")))) || ['No Data'];
            const ordersOverTimeCtx = document.getElementById('ordersOverTimeChart').getContext('2d');
            new Chart(ordersOverTimeCtx, {
                type: 'line',
                data: {
                    labels: ordersOverTimeLabels,
                    datasets: [{
                        label: 'Orders',
                        data: ordersOverTimeData,
                        borderColor: '#1e3a8a',
                        backgroundColor: 'rgba(30, 58, 138, 0.1)',
                        fill: true,
                        tension: 0.4,
                        borderWidth: 3,
                        pointBackgroundColor: '#ffffff',
                        pointBorderColor: '#1e3a8a',
                        pointRadius: 4,
                        pointHoverRadius: 6
                    }]
                },
                options: {
                    scales: {
                        x: { grid: { display: false }, ticks: { maxTicksLimit: 10 } },
                        y: { beginAtZero: true, grid: { borderDash: [5, 5] } }
                    },
                    plugins: {
                        legend: { display: false },
                        tooltip: { backgroundColor: 'rgba(0,0,0,0.8)', padding: 12 }
                    },
                    layout: {
                        padding: 20 // Added padding to chart canvas
                    }
                }
            });

            // Top Zones Chart (Bar)
            const topZonesData = @Html.Raw(Json.Serialize(Model.TopZones.Select(x => x.OrderCount))) || [0];
            const topZonesLabels = @Html.Raw(Json.Serialize(Model.TopZones.Select(x => x.Zone.ToString()))) || ['No Data'];
            const topZonesCtx = document.getElementById('topZonesChart').getContext('2d');
            new Chart(topZonesCtx, {
                type: 'bar',
                data: {
                    labels: topZonesLabels,
                    datasets: [{
                        label: 'Orders',
                        data: topZonesData,
                        backgroundColor: 'rgba(6, 182, 212, 0.7)',
                        borderColor: '#06b6d4',
                        borderWidth: 1,
                        borderRadius: 5,
                        maxBarThickness: 40
                    }]
                },
                options: {
                    scales: {
                        x: { grid: { display: false } },
                        y: { beginAtZero: true, grid: { borderDash: [5, 5] } }
                    },
                    plugins: {
                        legend: { display: false },
                        tooltip: { backgroundColor: 'rgba(0,0,0,0.8)', padding: 12 }
                    },
                    layout: {
                        padding: 20 // Added padding to chart canvas
                    }
                }
            });

            // Order Priority Chart (Pie)
            const orderPriorityData = @Html.Raw(Json.Serialize(Model.OrderPriorityCounts.Select(x => x.Count))) || [1];
            const orderPriorityLabels = @Html.Raw(Json.Serialize(Model.OrderPriorityCounts.Select(x => x.Priority.ToString()))) || ['No Data'];
            const orderPriorityCtx = document.getElementById('orderPriorityChart').getContext('2d');
            new Chart(orderPriorityCtx, {
                type: 'pie',
                data: {
                    labels: orderPriorityLabels,
                    datasets: [{
                        data: orderPriorityData,
                        backgroundColor: ['#f59e0b', '#22c55e', '#06b6d4'],
                        borderWidth: 1,
                        borderColor: '#ffffff',
                        hoverOffset: 5 // Reduced to minimize clipping
                    }]
                },
                options: {
                    plugins: {
                        legend: { position: 'right', labels: { boxWidth: 15, padding: 15 } },
                        tooltip: { backgroundColor: 'rgba(0,0,0,0.8)', padding: 12 }
                    },
                    layout: {
                        padding: 20 // Added padding to chart canvas
                    }
                }
            });
        });
    </script>
}